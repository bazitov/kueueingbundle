parameters:
    # Take control of the rabbitmq producer and consumer classes so we can extend them a bit for our needs
    old_sound_rabbit_mq.producer.class: Kaliop\QueueingBundle\RabbitMq\Producer
    old_sound_rabbit_mq.consumer.class: Kaliop\QueueingBundle\RabbitMq\Consumer

    # To be configured in a bundle depending on this one (or in the application):
    # worker processes to be monitored via watchdog console command
    kaliop_queueing.default.workers.list: {}
        # Example definition:
        # just a unique name
        #hello:
            # as configured in rabbitmq.yml
            #queue_name: 'test'
            # valid options: m, r, l, d. @see  php console help rabbitmq:consumer for details
            #options: { }


    # To be configured in a bundle depending on this one (or in the application):
    # the Sf console commands which we allow to execute via queue messages
    # If you want to use a regexp, start it with regexp:
    kaliop_queueing.default.allowed_commands:
        - kaliop_queueing:echoback
        ###
        # IMPORTANT!!! you should probably disable this in production for security reasons
        ###
        - regexp:/.*/

    # To be configured in a bundle depending on this one (or in the application):
    # the Sf services which we allow to execute via queue messages
    # If you want to use a regexp, start it with regexp:
    kaliop_queueing.default.allowed_services: []

    kaliop_queueing.default.available_xmlrpc_servers:
        demo:
            url:
            options: { }